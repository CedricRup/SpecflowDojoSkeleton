// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.18444
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Specs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Fin de partie")]
    public partial class FinDePartieFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Fin de partie.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("fr-FR"), "Fin de partie", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("La partie est gagnée si il n\'y a plus d\'action avant l\'échéance")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("US002")]
        public virtual void LaPartieEstGagneeSiIlNYAPlusDActionAvantLEcheance()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("La partie est gagnée si il n\'y a plus d\'action avant l\'échéance", new string[] {
                        "US002",
                        "ignore"});
#line 5
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Intitule",
                        "Charge"});
            table1.AddRow(new string[] {
                        "Chasser un éléphant",
                        "1"});
#line 7
 testRunner.Given("le rituel \'Crocto\' avec les actions suivantes", ((string)(null)), table1, "Etant donné ");
#line 11
 testRunner.And("la date de démarrage du rituel \'Crocto\' est au \'17/08/2014\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 12
 testRunner.And("l\'échéance du rituel \'Crocto\' est au \'17/08/2015\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Nom"});
            table2.AddRow(new string[] {
                        "Alice"});
#line 15
 testRunner.And("le village \'Petibonum\' habité par", ((string)(null)), table2, "Et ");
#line 19
 testRunner.And("le village \'Petibonum\' effectue le rituel \'Crocto\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Villageois",
                        "Action"});
            table3.AddRow(new string[] {
                        "Alice",
                        "Chasser un éléphant"});
#line 21
 testRunner.Given("le plan d\'action pour le rituel \'Crocto\'", ((string)(null)), table3, "Etant donné ");
#line 25
 testRunner.When("la journée se termine", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quand ");
#line 26
 testRunner.Then("le rituel est complété", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 27
 testRunner.And("la partie est gagnée", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("La partie est perdue si il reste de la charge le jour de l\'échéance")]
        [NUnit.Framework.IgnoreAttribute()]
        [NUnit.Framework.CategoryAttribute("US002")]
        public virtual void LaPartieEstPerdueSiIlResteDeLaChargeLeJourDeLEcheance()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("La partie est perdue si il reste de la charge le jour de l\'échéance", new string[] {
                        "US002",
                        "ignore"});
#line 31
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Intitule",
                        "Charge"});
            table4.AddRow(new string[] {
                        "Chasser un éléphant",
                        "2"});
#line 33
testRunner.Given("le rituel \'Crocto\' avec les actions suivantes", ((string)(null)), table4, "Etant donné ");
#line 37
 testRunner.And("la date de démarrage du rituel \'Crocto\' est au 17/08/2014", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 38
 testRunner.And("l\'échéance du rituel \'Crocto\' est au 17/08/2015", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Nom"});
            table5.AddRow(new string[] {
                        "Alice"});
#line 41
 testRunner.And("le village \'Petibonum\' habité par", ((string)(null)), table5, "Et ");
#line 45
 testRunner.And("le village \'Petibonum\' effectue le rituel \'Crocto\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Villageois",
                        "Action"});
            table6.AddRow(new string[] {
                        "Alice",
                        "Chasser un éléphant"});
#line 47
 testRunner.Given("le plan d\'action pour le rituel \'Crocto\'", ((string)(null)), table6, "Etant donné ");
#line 51
 testRunner.When("la journée se termine", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quand ");
#line 52
 testRunner.Then("la partie est perdue", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
